% ------------------------------------------------------------------------
% BIBLIOGRAPHY FILE
% ------------------------------------------------------------------------

@book{ embedded_systems_architecture,
    author="Daniele Lacamera",
    title="Embedded systems architecture",
    year="2023"
}

@misc { linux_embedded_ubuntu,
    title = "Embedded linux Ubuntu",
    year = "2019",
    howpublished = "\url{https://ubuntu.com/blog/what-is-embedded-linux}"
}

@misc { embedded_linux_windriver,
    howpublished = "\url{https://www.windriver.com/solutions/learning/embedded-linux}", 
    title = "Embedded linux Windriver",
    year = "2020"
} 

@book{ abbott2011linux,
  title={Linux for embedded and real-time applications},
  author={Abbott, Doug},
  year={2011},
  publisher={Elsevier}
}

@misc{ linux_real_time,
    howpublished = "\url{https://www.embedded.com/real-time-linux/}",
    title = "Real Time Linux",
    year = "2001"
}

@misc{ yocto,
    howpublished = "\url{https://www.yoctoproject.org/}",
    title = "Yocto project",
    year = "2023"
}

@misc{ freeRTOS,
    howpublished = "\url{https://www.freertos.org/about-RTOS.html}",
    title = "freeRTOS site",
    year = "2023"
}

@misc{ GNUMake,
    howpublished = "\url{https://www.gnu.org/software/make/}",
    title = "GNU Make site",
    year = "2023"
}

@misc{ AM64_datasheet,
    howpublished = "\url{https://www.ti.com/lit/ds/symlink/am6412.pdf}",
    title = "AM64x Datasheet",
    year = "2023"
}

@misc{ ARM_M4,
    howpublished = "\url{https://developer.arm.com/Processors/Cortex-M4}",
    title = "ARM M4 specifications",
    year = "2014"
}

@misc{ Technical_reference_AM64,
    howpublished = "\url{https://www.ti.com/lit/ug/spruim2h/spruim2h.pdf}",
    title = "AM64x Technical reference manual",
    year = "2020"
}

@misc{ TI_site,
    howpublished = "\url{https://www.ti.com/product/AM6442}",
    title = "AM64x Sitara™ Processors",
    year = "2023"
}

@misc{ Xilinx_site,
    howpublished = "\url{https://www.xilinx.com/products/silicon-devices/soc/zynq-7000.html}",
    title = "Zynq UltraScale+ MPSoCs",
    year = "2023"
}

@misc{ Ingenic_site,
    howpublished = "\url{http://www.ingenic.com.cn/}",
    title = "X2xx Series",
    year = "2023"
}

@misc{ Rockchip_site,
    howpublished = "\url{https://www.rock-chips.com/a/en/News/Press_Releases/index-89-9.html}",
    title = "Rockchip RK3xx Series",
    year = "2023"
}

@misc{ Renesas_site,
    howpublished = "\url{https://www.solid-run.com/embedded-industrial-iot/renesas-rz-family/}",
    title = "RZ/G2 MPUs",
    year = "2023"
}

@misc{ TCM_documentation,
    howpublished = "\url{https://developer.arm.com/documentation/den0042/a/Tightly-Coupled-Memory}",
    title = "Tightly coupled memories documentation",
    year = "2021"
}

@misc{ M4F_technical_reference,
    howpublished = "\url{https://developer.arm.com/documentation/ddi0439/b/Introduction/Product-documentation/Documentation}",
    title = "Cortex-M4 technial reference manual",
    year = "2021"
}

@book{ Pub/Sub_pattern,
    author="Sasu Tarkoma",
    title="Publish/subscribe systems: design and principle",
    year="2012"
}

@article{Many_faces_of_pub/sub,
    author = {Eugster, Patrick Th. and Felber, Pascal A. and Guerraoui, Rachid and Kermarrec, Anne-Marie},
    title = {The Many Faces of Publish/Subscribe},
    year = {2003},
    issue_date = {June 2003},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    volume = {35},
    number = {2},
    issn = {0360-0300},
    url = {https://doi.org/10.1145/857076.857078},
    doi = {10.1145/857076.857078},
    abstract = {Well adapted to the loosely coupled nature of distributed interaction in large-scale applications, the publish/subscribe communication paradigm has recently received increasing attention. With systems based on the publish/subscribe interaction scheme, subscribers register their interest in an event, or a pattern of events, and are subsequently asynchronously notified of events generated by publishers. Many variants of the paradigm have recently been proposed, each variant being specifically adapted to some given application or network model. This paper factors out the common denominator underlying these variants: full decoupling of the communicating entities in time, space, and synchronization. We use these three decoupling dimensions to better identify commonalities and divergences with traditional interaction paradigms. The many variations on the theme of publish/subscribe are classified and synthesized. In particular, their respective benefits and shortcomings are discussed both in terms of interfaces and implementations.},
    journal = {ACM Comput. Surv.},
    month = {jun},
    pages = {114–131},
    numpages = {18},
    keywords = {publish/subscribe, interaction, Distribution}
}

@book{garg2013apache,
  title={Apache kafka},
  author={Garg, Nishant},
  year={2013},
  publisher={Packt Publishing Birmingham, UK}
}

@misc{ kafka_documentation,
    howpublished = "\url{https://kafka.apache.org/documentation/}",
    title = "Apache kafka documentation",
    year = "2023"
}

@book{salvador2014embedded,
  title={Embedded Linux Development with Yocto Project},
  author={Salvador, Otavio and Angolini, Daiane},
  year={2014},
  publisher={Packt Publishing Ltd}
}


@article{raptis2023survey,
  title={A survey on networked data streaming with apache kafka},
  author={Raptis, Theofanis P and Passarella, Andrea},
  journal={IEEE access},
  year={2023},
  publisher={IEEE}
}
